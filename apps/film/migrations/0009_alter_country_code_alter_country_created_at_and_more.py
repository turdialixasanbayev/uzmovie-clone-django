# Generated by Django 5.2.5 on 2025-08-26 03:44

import ckeditor.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('category', '0002_alter_category_options_alter_tag_options_and_more'),
        ('film', '0008_alter_country_code_alter_country_created_at_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='country',
            name='code',
            field=models.CharField(db_index=True, help_text='The ISO 3166-1 alpha-3 country code (e.g., UZB)', max_length=3, unique=True),
        ),
        migrations.AlterField(
            model_name='country',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='The date and time when this country was added'),
        ),
        migrations.AlterField(
            model_name='country',
            name='name',
            field=models.CharField(db_index=True, help_text='The official name of the country (e.g., Uzbekistan)', max_length=150, unique=True),
        ),
        migrations.AlterField(
            model_name='country',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='The date and time when this country was last updated'),
        ),
        migrations.AlterField(
            model_name='film',
            name='age_type',
            field=models.IntegerField(choices=[(0, '0+'), (6, '6+'), (12, '12+'), (16, '16+'), (18, '18+')], default=0, help_text='Minimum recommended viewer age'),
        ),
        migrations.AlterField(
            model_name='film',
            name='bot_code',
            field=models.CharField(blank=True, help_text='Unique bot access code for the film', max_length=10, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='film',
            name='bot_link',
            field=models.URLField(blank=True, help_text='Telegram bot link to access the film', max_length=300, null=True),
        ),
        migrations.AlterField(
            model_name='film',
            name='category',
            field=models.ForeignKey(help_text='The category this film belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='films', to='category.category'),
        ),
        migrations.AlterField(
            model_name='film',
            name='country',
            field=models.ForeignKey(help_text='Country where the film was produced', on_delete=django.db.models.deletion.CASCADE, related_name='film_country', to='film.country'),
        ),
        migrations.AlterField(
            model_name='film',
            name='description',
            field=ckeditor.fields.RichTextField(blank=True, help_text='Detailed description or synopsis of the film', null=True),
        ),
        migrations.AlterField(
            model_name='film',
            name='duration',
            field=models.DurationField(blank=True, help_text='Film duration in HH:MM:SS', null=True),
        ),
        migrations.AlterField(
            model_name='film',
            name='image',
            field=models.ImageField(blank=True, help_text='Film poster or cover image', null=True, upload_to='films'),
        ),
        migrations.AlterField(
            model_name='film',
            name='language',
            field=models.CharField(choices=[('EN', 'English'), ('RU', 'Russian'), ('TR', 'Turkish'), ('UZ', 'Uzbek')], default='UZ', help_text='Main language of the film', max_length=2),
        ),
        migrations.AlterField(
            model_name='film',
            name='name',
            field=models.CharField(db_index=True, help_text='The official title of the film', max_length=350, unique=True),
        ),
        migrations.AlterField(
            model_name='film',
            name='release_date',
            field=models.DateTimeField(auto_now_add=True, help_text='The date and time when the film was added to the system'),
        ),
        migrations.AlterField(
            model_name='film',
            name='slug',
            field=models.SlugField(blank=True, help_text='Unique slug generated from the film name', max_length=450, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='film',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='Tags associated with this film', related_name='film', to='category.tag'),
        ),
        migrations.AlterField(
            model_name='film',
            name='trailer_link',
            field=models.URLField(blank=True, help_text='YouTube or other video platform trailer URL', max_length=300, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='film',
            name='video',
            field=models.FileField(blank=True, help_text='Optional full video file', null=True, upload_to='videos'),
        ),
        migrations.AlterField(
            model_name='film',
            name='views',
            field=models.PositiveIntegerField(default=0, help_text='Total number of views'),
        ),
        migrations.AlterField(
            model_name='film',
            name='year',
            field=models.PositiveIntegerField(blank=True, help_text='The year the film was released', null=True),
        ),
        migrations.AlterField(
            model_name='reaction',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='The date and time when the reaction was created'),
        ),
        migrations.AlterField(
            model_name='reaction',
            name='film',
            field=models.ForeignKey(help_text='The film that the user reacted to', on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='film.film'),
        ),
        migrations.AlterField(
            model_name='reaction',
            name='reaction',
            field=models.SmallIntegerField(choices=[(1, 'Like'), (-1, 'Dislike')], help_text="User's reaction to the film (like or dislike)"),
        ),
        migrations.AlterField(
            model_name='reaction',
            name='user',
            field=models.ForeignKey(help_text='The user who reacted to the film', on_delete=django.db.models.deletion.CASCADE, related_name='reaction', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='review',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='The date and time when the review was created'),
        ),
        migrations.AlterField(
            model_name='review',
            name='description',
            field=ckeditor.fields.RichTextField(blank=True, help_text='Write your review about the film', null=True),
        ),
        migrations.AlterField(
            model_name='review',
            name='film',
            field=models.ForeignKey(help_text='The film that was reviewed', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='film.film'),
        ),
        migrations.AlterField(
            model_name='review',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='The date and time when the review was last updated'),
        ),
        migrations.AlterField(
            model_name='review',
            name='user',
            field=models.ForeignKey(help_text='The user who wrote this review', on_delete=django.db.models.deletion.CASCADE, related_name='review', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='film',
            index=models.Index(fields=['name'], name='film_film_name_d3563e_idx'),
        ),
        migrations.AddIndex(
            model_name='film',
            index=models.Index(fields=['year'], name='film_film_year_b81e97_idx'),
        ),
        migrations.AddIndex(
            model_name='film',
            index=models.Index(fields=['release_date'], name='film_film_release_28071f_idx'),
        ),
    ]
